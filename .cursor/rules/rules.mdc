---
description: Marp Presentation
globs: *.md
alwaysApply: true
---
# 🎯 Cursor AI 用プロジェクトルール

このファイルは、CursorのAI機能がMarpスライド作成プロジェクトを理解し、Cursorユーザーにより適切なサポートを提供するためのルール定義です。

## 📋 プロジェクト概要

このプロジェクトは **Marp（Markdown Presentation Ecosystem）** を使用したスライド作成環境です。

### 主な技術スタック
- **Marp CLI** - Markdownからスライドを生成
- **Node.js** - パッケージ管理とビルドツール
- **CSS** - カスタムテーマスタイル
- **Markdown** - スライドコンテンツ記述
- **Cursor AI** - AI支援による効率的なスライド作成

## 🎨 コード生成ルール

### Markdownスライド作成時

1. **必須フロントマター**
   ```markdown
   ---
   marp: true
   theme: default
   paginate: true
   backgroundColor: #fff
   ---
   ```

2. **スライド区切り**
   - 各スライド間は `---` で区切る
   - 1つのMarkdownファイルで複数スライドを管理

3. **推奨構造**
   ```markdown
   # タイトルスライド
   
   <!-- Mermaidの初期化 -->
   <script type="module">
   import mermaid from 'https://cdn.jsdelivr.net/npm/mermaid@11.4.1/dist/mermaid.esm.min.mjs';
   mermaid.initialize({ startOnLoad: true });
   </script>
   
   ---
   
   ## アジェンダ
   
   ---
   
   ## メインコンテンツ
   
   ---
   
   # まとめ
   ```

4. **Mermaidチャート対応**
   - **重要:** 表紙スライドにMermaid初期化スクリプトを必ず配置
   - 初期化スクリプトは表紙の直後に配置し、プレゼンテーション全体でMermaidを利用可能にする
   - 各スライドでの重複した初期化スクリプトは不要
   - フローチャート、ガントチャート、シーケンス図などすべてのMermaidチャートが利用可能

### CSS テーマ作成時

1. **ファイル命名規則**
   - `themes/[プロジェクト名].css`
   - プロジェクト名と一致させる

2. **基本構造**
   ```css
   /* @theme プロジェクト名 */
   
   section {
     /* スライド全体のスタイル */
   }
   
   h1, h2, h3 {
     /* 見出しスタイル */
   }
   ```

### package.json スクリプト

標準的なスクリプト構成：
```json
{
  "scripts": {
    "build": "marp slide.md --pdf",
    "build-html": "marp slide.md --html", 
    "watch": "marp slide.md --watch --html",
    "serve": "marp slide.md --server"
  }
}
```

## 🤖 AI 対応指針

### Cursorでの統合ワークフロー

**新規スライド作成の流れ:**
1. ターミナル（Ctrl+`）で `npm run new -- プロジェクト名` を実行
2. 生成されたプロジェクトフォルダーをCursorで開く
3. slide.mdを開き、AI機能（Cmd+K / Ctrl+K）で内容を生成
4. 必要に応じてAI Chat（Cmd+L / Ctrl+L）で相談・改善

### ユーザーリクエストの解釈

1. **「スライドを作って」系のリクエスト**
   - 必ずMarp形式のMarkdownで生成
   - フロントマターを含める
   - 適切なスライド数（5-10枚程度）を提案
   - **重要:** 既存のテンプレートスライドは完全に削除してから新しい内容で置き換える
   - テンプレート内容（サンプルテキスト、プレースホルダーなど）は一切残さない
   - CursorのInline Edit機能での直接編集を推奨

2. **「テーマを作って」系のリクエスト**
   - CSS形式で生成
   - `@theme` ディレクティブを含める
   - プロジェクト名と関連付け

3. **「エクスポートしたい」系のリクエスト**
   - Cursor内でのエクスポート操作を優先して説明
   - コマンドパレット（Cmd+Shift+P / Ctrl+Shift+P）の使用方法
   - 「Export Slide Deck...」コマンドの案内

### コンテンツ生成のベストプラクティス

1. **スライド内容**
   - 1スライド1トピックの原則
   - 箇条書きを効果的に活用
   - 視覚的な区切りを意識

2. **日本語コンテンツ**
   - ビジネスプレゼンに適した敬語・丁寧語
   - 専門用語には適宜説明を付加
   - 読みやすい改行・句読点

3. **国際化対応**
   - 英語併記が必要な場合は明示
   - フォント指定時は日本語フォントを考慮

## 📁 ファイル・ディレクトリ構造の理解

```
プロジェクトルート/
├── README.md              # Cursorユーザー向けガイド
├── package.json           # NPM設定
├── .cursor/              # Cursor専用設定
│   └── rules/
│       └── rules.mdc     # AI動作ルール定義
├── scripts/              # 自動化スクリプト
├── themes/               # 共通テーマCSSファイル
│   └── *.css
└── [プレゼン名]/         # 個別プレゼンテーション
    ├── slide.md          # メインスライドファイル
    ├── images/           # 画像リソース
    ├── themes/           # プロジェクト固有テーマ
    ├── package.json      # プロジェクト設定
    └── node_modules/     # 依存関係

手順構成（READMEより）:
1. 最初の準備 (Node.js/npm)
2. セットアップ (Cursor環境)
3. 新しいスライド作成とAI内容生成 (統合手順)
4. PDFエクスポート
5. フォルダー構成参考
```

## 🔧 トラブルシューティング支援

### よくあるエラーと解決策

1. **Marpプレビューが表示されない**
   - 「Marp for VS Code」拡張機能の有効化確認
   - フロントマターの確認
   - ファイル保存状態の確認
   - Markdownプレビューセキュリティ設定（「Disabled」に変更）

2. **ターミナルでコマンドが実行できない**
   - Cursor内蔵ターミナル（Ctrl+`）の使用確認
   - 正しいディレクトリにいるか確認
   - Node.js/NPMのインストール状態確認

3. **AI機能が期待通りに動作しない**
   - 具体的で明確なプロンプト指示の提案
   - 「何について」「何枚で」を明確に指定
   - テンプレート削除指示の追加

4. **テーマが反映されない**
   - テーマファイルパスの確認
   - workspace設定の更新提案
   - キャッシュクリアの提案

5. **ビルドエラー**
   - Node.js/NPMのバージョン確認
   - 依存関係の再インストール提案
   - エラーログの解析

6. **Mermaidチャートが表示されない**
   - 表紙スライドに初期化スクリプトが配置されているか確認
   - 初期化スクリプトの構文が正しいか確認
   - ブラウザの開発者ツールでエラーがないか確認
   - Marp for VS Code拡張機能の再読み込み
   - プレビューの再読み込み（Ctrl+Shift+P → "Marp: Reload Preview"）

## 📝 コミュニケーション方針

### ユーザーとの対話

1. **技術レベルに合わせた説明**
   - 非エンジニアには用語説明を含める
   - 具体的な手順を段階的に提示
   - スクリーンショット的な説明文を活用

2. **Cursor環境での操作案内**
   - Cursor内蔵ターミナルの使用を前提（Ctrl+`）
   - CursorのAI機能活用（Cmd+L / Ctrl+L, Cmd+K / Ctrl+K）
   - Mac/Windows共通のショートカットキー併記

3. **CursorのAI機能活用提案**
   - AI Chat（Cmd+L / Ctrl+L）での相談・アイデア出し
   - Inline Edit（Cmd+K / Ctrl+K）での直接編集
   - スライド内容の自動生成・改善提案
   - ワークフロー最適化のアドバイス

---

**注意:** このルールファイルは、CursorのAI機能がプロジェクトコンテキストを理解するためのものです。ユーザーが直接編集する必要はありません。